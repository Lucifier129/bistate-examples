{"version":3,"sources":["hooks/useSessionStorage.js","demos/Counter.js"],"names":["__webpack_require__","d","__webpack_exports__","useSessionStorage","react__WEBPACK_IMPORTED_MODULE_0__","_ref","key","getter","setter","ref","useRef","useEffect","json","window","sessionStorage","getItem","current","JSON","parse","value","stringify","setItem","Counter","_useBistate","useBistate","count","state","Object","D_Users_yj_gu_Documents_code_GitHub_bistate_examples_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","incre","useMutate","decre","sync","source","assign","timer","setInterval","clearInterval","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","onClick"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAEe,SAASG,EAATE,GAAoD,IAAvBC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,OAAQC,EAAUH,EAAVG,OACnDC,EAAMC,iBAAO,CAAEJ,MAAKC,SAAQC,WAEhCG,oBAAU,WACR,IAAIC,EAAOC,OAAOC,eAAeC,QAAQT,GAMzC,OAJIM,GACFH,EAAIO,QAAQR,OAAOS,KAAKC,MAAMN,IAGzB,WACL,IAAIO,EAAQF,KAAKG,UAAUX,EAAIO,QAAQT,UACvCM,OAAOC,eAAeO,QAAQf,EAAKa,KAEpC,IAEHR,oBAAU,WACRF,EAAIO,QAAU,CAAEV,MAAKC,SAAQC,WAC5B,CAACF,EAAKC,EAAQC,6HChBJ,SAASc,IAAU,IAAAC,EAClBC,qBAAW,CAAEC,MAAO,IAA7BC,EAD2BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,MAG5BM,EAAQC,oBAAU,WACpBJ,EAAMD,OAAS,IAGbM,EAAQD,oBAAU,WACpBJ,EAAMD,OAAS,IAGbO,EAAOF,oBAAU,SAAAG,GACnBN,OAAOO,OAAOR,EAAOO,KAcvB,OAXA9B,YAAkB,CAChBG,IAAK,eACLC,OAAQ,kBAAMmB,GACdlB,OAAQwB,IAGVrB,oBAAU,WACR,IAAIwB,EAAQC,YAAYP,EAAO,KAC/B,OAAO,kBAAMQ,cAAcF,KAC1B,IAGDG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,QAASZ,GAAjB,MACCH,EAAMD,MACPa,EAAAC,EAAAC,cAAA,UAAQC,QAASV,GAAjB","file":"static/js/5.e4b7ebb0.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react'\r\n\r\nexport default function useSessionStorage({ key, getter, setter }) {\r\n  let ref = useRef({ key, getter, setter })\r\n\r\n  useEffect(() => {\r\n    let json = window.sessionStorage.getItem(key)\r\n\r\n    if (json) {\r\n      ref.current.setter(JSON.parse(json))\r\n    }\r\n\r\n    return () => {\r\n      let value = JSON.stringify(ref.current.getter())\r\n      window.sessionStorage.setItem(key, value)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    ref.current = { key, getter, setter }\r\n  }, [key, getter, setter])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useBistate, useMutate } from 'bistate/react'\r\nimport useSessionStorage from '../hooks/useSessionStorage'\r\n\r\nexport default function Counter() {\r\n  let [state] = useBistate({ count: 0 })\r\n\r\n  let incre = useMutate(() => {\r\n    state.count += 1\r\n  })\r\n\r\n  let decre = useMutate(() => {\r\n    state.count -= 1\r\n  })\r\n\r\n  let sync = useMutate(source => {\r\n    Object.assign(state, source)\r\n  })\r\n\r\n  useSessionStorage({\r\n    key: 'counter-json',\r\n    getter: () => state,\r\n    setter: sync\r\n  })\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(incre, 1000)\r\n    return () => clearInterval(timer)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={incre}>+1</button>\r\n      {state.count}\r\n      <button onClick={decre}>-1</button>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}