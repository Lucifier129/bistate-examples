{"version":3,"sources":["hooks/useSessionStorage.js","demos/Counter.js"],"names":["__webpack_require__","d","__webpack_exports__","useSessionStorage","react__WEBPACK_IMPORTED_MODULE_0__","_ref","key","getter","setter","ref","useRef","useEffect","json","window","sessionStorage","getItem","current","JSON","parse","saveToStorage","value","stringify","setItem","addEventListener","removeEventListener","r","Counter","react__WEBPACK_IMPORTED_MODULE_0___default","n","bistate_react__WEBPACK_IMPORTED_MODULE_1__","_hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_2__","state","useBistate","count","incre","useMutate","decre","sync","source","Object","assign","timer","setInterval","clearInterval","a","createElement","onClick"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAEe,SAASG,EAATE,GAAoD,IAAvBC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,OAAQC,EAAUH,EAAVG,OACnDC,EAAMC,iBAAO,CAAEJ,MAAKC,SAAQC,WAEhCG,oBAAU,WACR,IAAIC,EAAOC,OAAOC,eAAeC,QAAQT,GAErCM,GACFH,EAAIO,QAAQR,OAAOS,KAAKC,MAAMN,IAGhC,IAAIO,EAAgB,WAClB,IAAIC,EAAQH,KAAKI,UAAUZ,EAAIO,QAAQT,UACvCM,OAAOC,eAAeQ,QAAQhB,EAAKc,IAKrC,OAFAP,OAAOU,iBAAiB,eAAgBJ,GAAe,GAEhD,WACLA,IACAN,OAAOW,oBAAoB,eAAgBL,GAAe,KAE3D,IAEHR,oBAAU,WACRF,EAAIO,QAAU,CAAEV,MAAKC,SAAQC,WAC5B,CAACF,EAAKC,EAAQC,sCC3BnBR,EAAAyB,EAAAvB,GAAAF,EAAAC,EAAAC,EAAA,4BAAAwB,IAAA,IAAAtB,EAAAJ,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAxB,GAAAyB,EAAA7B,EAAA,GAAA8B,EAAA9B,EAAA,IAIe,SAAS0B,IACtB,IAAIK,EAAQC,qBAAW,CAAEC,MAAO,IAE5BC,EAAQC,oBAAU,WACpBJ,EAAME,OAAS,IAGbG,EAAQD,oBAAU,WACpBJ,EAAME,OAAS,IAGbI,EAAOF,oBAAU,SAAAG,GACnBC,OAAOC,OAAOT,EAAOO,KAcvB,OAXAnC,YAAkB,CAChBG,IAAK,eACLC,OAAQ,kBAAMwB,GACdvB,OAAQ6B,IAGV1B,oBAAU,WACR,IAAI8B,EAAQC,YAAYR,EAAO,KAC/B,OAAO,kBAAMS,cAAcF,KAC1B,IAGDd,EAAAiB,EAAAC,cAAA,WACElB,EAAAiB,EAAAC,cAAA,UAAQC,QAASZ,GAAjB,MACCH,EAAME,MACPN,EAAAiB,EAAAC,cAAA,UAAQC,QAASV,GAAjB","file":"static/js/5.cf962687.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react'\r\n\r\nexport default function useSessionStorage({ key, getter, setter }) {\r\n  let ref = useRef({ key, getter, setter })\r\n\r\n  useEffect(() => {\r\n    let json = window.sessionStorage.getItem(key)\r\n\r\n    if (json) {\r\n      ref.current.setter(JSON.parse(json))\r\n    }\r\n\r\n    let saveToStorage = () => {\r\n      let value = JSON.stringify(ref.current.getter())\r\n      window.sessionStorage.setItem(key, value)\r\n    }\r\n\r\n    window.addEventListener('beforeunload', saveToStorage, false)\r\n\r\n    return () => {\r\n      saveToStorage()\r\n      window.removeEventListener('beforeunload', saveToStorage, false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    ref.current = { key, getter, setter }\r\n  }, [key, getter, setter])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useBistate, useMutate } from 'bistate/react'\r\nimport useSessionStorage from '../hooks/useSessionStorage'\r\n\r\nexport default function Counter() {\r\n  let state = useBistate({ count: 0 })\r\n\r\n  let incre = useMutate(() => {\r\n    state.count += 1\r\n  })\r\n\r\n  let decre = useMutate(() => {\r\n    state.count -= 1\r\n  })\r\n\r\n  let sync = useMutate(source => {\r\n    Object.assign(state, source)\r\n  })\r\n\r\n  useSessionStorage({\r\n    key: 'counter-json',\r\n    getter: () => state,\r\n    setter: sync\r\n  })\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(incre, 1000)\r\n    return () => clearInterval(timer)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={incre}>+1</button>\r\n      {state.count}\r\n      <button onClick={decre}>-1</button>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}